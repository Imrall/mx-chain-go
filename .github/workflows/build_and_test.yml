name: Build and smoke test

on:
  pull_request:
    branches: [master, rc/*]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        runs-on: [ubuntu-latest, macos-latest, macos-13-xlarge]
    runs-on: ${{ matrix.runs-on }}
    name: Build
    steps:
      - name: Set up Go 1.20.7
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.7
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
          fi

      - name: Build
        run: |
          cd ${GITHUB_WORKSPACE}/cmd/node && go build .
          cd ${GITHUB_WORKSPACE}/cmd/seednode && go build .
          cd ${GITHUB_WORKSPACE}/cmd/keygenerator && go build .
          cd ${GITHUB_WORKSPACE}/cmd/logviewer && go build .
          cd ${GITHUB_WORKSPACE}/cmd/termui && go build .

      # On GitHub, we only run the short tests, and we only run them for some OS/ARCH combinations.
      - name: Run tests
        run: |
          GOOS=$(go env GOOS)
          GOARCH=$(go env GOARCH)

          if [[ "$GOOS" == darwin && "$GOARCH" == amd64 ]]; then
            # "libwasmer_darwin_amd64.dylib" was built with an unfortunate identifier (in the past), so we need to fix it.
            GOPATH=$(go env GOPATH) python3 ${GITHUB_WORKSPACE}/.github/workflows/patch_libwasmer_darwin_amd64.py
          fi

          if [[ "$GOOS" == darwin ]]; then
            go test -short ./...
          fi
